https://github.com/youthlql/JavaYouth

单例模式 --->少用，不好测试
工厂模式
    简单模式工厂 ---> 针对不用情况各种不同的实例话封装到一个外部方法
    工厂方法模式 ---> 把上面针对不同的实例化步骤加厚到不同工厂实现类中，每种工厂生产一种类型的实例
建造者模式 ---> Builder
代理模式 --> AOP 增加当前代理功能无关的一些附加功能
装饰者模式 ---> 增强  DataInputstream（增强了当前功能，是增加了相关的）
适配器模式（Adapter）--->修改老接口兼容新接口
观察者模式--->订阅后，触发。evenbus也是
模板模式-->延迟子类去实现
策略模式-->map("strategy",new strategy)
职责链模式 --->filter 每个filter做自己的处理然后传给下一个
迭代器模式
